// Generated by CoffeeScript 1.7.1
var $,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

$ = jQuery;

$(function() {
  var SVGCard, SecretCard, TableView;
  SVGCard = (function() {
    SVGCard.WI = 150;

    SVGCard.HE = 150;

    function SVGCard(text) {
      this.text = text;
      this.svg = this.makeCard();
    }

    SVGCard.prototype.makeCard = function() {
      var text;
      text = "<text y=" + (SVGCard.HE / 2) + " x=2 font-size='10px'>" + (this.text.replace("_svg", "")) + "</text>";
      return $("<svg height=" + SVGCard.HE + "  width=" + SVGCard.WI + " id='" + this.text + "' class='mem_txt'>" + text + "</svg>");
    };

    return SVGCard;

  })();
  SecretCard = (function() {
    function SecretCard(text, _class) {
      this.text = text;
      this["class"] = _class;
      this.card = this.makeCard();
    }

    SecretCard.prototype.makeCard = function() {
      return "<td><img id='" + this.text + "' class='" + this["class"] + "' data-stat='secret' src='memory/pics/secret.jpg' ></td>";
    };

    return SecretCard;

  })();
  TableView = (function() {
    function TableView(data) {
      this.data = data;
      this.control_selected = __bind(this.control_selected, this);
      this.makeTable();
      this.current_sel = [];
    }

    TableView.prototype.makeTable = function() {
      var c, i, itm, itms, k, rand_num, t, td, tr, v, word, _i, _j, _len, _ref, _ref1, _ref2;
      t = $("<table id='memory'>");
      tr = $("<tr>");
      itms = [];
      _ref = this.data;
      for (k in _ref) {
        v = _ref[k];
        c = new SecretCard(k, "mem_pic");
        td = $(c.card);
        itms.push(td);
      }
      _ref1 = this.data;
      for (k in _ref1) {
        v = _ref1[k];
        c = new SecretCard(k + "_svg", "mem_txt");
        td = $(c.card);
        itms.push(td);
      }
      for (i = _i = _ref2 = itms.length; _ref2 <= 0 ? _i < 0 : _i > 0; i = _ref2 <= 0 ? ++_i : --_i) {
        rand_num = Math.floor(Math.random() * i);
        word = itms.splice(rand_num, 1)[0];
        itms.push(word);
      }
      for (i = _j = 0, _len = itms.length; _j < _len; i = ++_j) {
        itm = itms[i];
        if (i % 5 === 0) {
          tr = $("<tr>");
          t.append(tr);
        }
        tr.append(itm);
      }
      $("#wrap").append(t);
      return this.turnCard();
    };

    TableView.prototype.control_selected = function() {
      var c, stat, tab, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3;
      tab = $("table");
      stat = (function() {
        var _i, _len, _ref, _results;
        _ref = this.current_sel;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          _results.push((c.prop("id")).replace("_svg", ""));
        }
        return _results;
      }).call(this);
      if (stat[0] === stat[1]) {
        _ref = this.current_sel;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          c.attr("class", "solved");
        }
        _ref1 = this.current_sel;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          c = _ref1[_j];
          c.unbind();
        }
        $(".solved").css("background-color", "green");
        $(".solved").animate({
          backgroundColor: "white"
        }, 1000);
      } else {
        tab.css("backgroundColor", "red");
        $("table").animate({
          backgroundColor: "white"
        }, 1000);
        _ref2 = this.current_sel;
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          c = _ref2[_k];
          c.click();
        }
        _ref3 = this.current_sel;
        for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
          c = _ref3[_l];
          if (c.prop("tagName") === "svg") {
            this._turnSecretSvg(c);
          }
        }
      }
      return this.current_sel = [];
    };

    TableView.prototype.addToSel = function(e) {
      this.current_sel.push(e);
      if (this.current_sel.length === 2) {
        return setTimeout(this.control_selected, 1000);
      }
    };

    TableView.prototype.turnCard = function() {
      $("img.mem_pic").click((function(_this) {
        return function(e) {
          var k, target, toturn;
          target = $(e.target);
          toturn = target.prop("id");
          switch (target.data("stat")) {
            case "secret":
              k = _this.data[toturn];
              target.prop("src", "memory/pics/" + k + ".jpg");
              target.data("stat", "active");
              return _this.addToSel(target);
            case "active":
              target.prop("src", 'memory/pics/secret.jpg');
              return target.data("stat", "secret");
          }
        };
      })(this));
      $("img.mem_txt").click((function(_this) {
        return function(e) {
          return _this._makeSvg(e);
        };
      })(this));
      return $("svg.mem_txt").click((function(_this) {
        return function(e) {};
      })(this));
    };

    TableView.prototype._makeSvg = function(e) {
      var svg, target, tdPar, toturn;
      console.log("ckeckcl", this.current_sel, e);
      target = $(e.target);
      toturn = target.prop("id");
      tdPar = target.parent();
      svg = new SVGCard(toturn);
      tdPar.append(svg.svg);
      target.remove();
      console.log(svg.svg);
      svg.svg.on("click", (function(_this) {
        return function(e) {};
      })(this));
      return this.addToSel(svg.svg);
    };

    TableView.prototype._turnSecretSvg = function(e) {
      var secret, target, tdPar, toturn;
      target = e;
      toturn = target.prop("id");
      tdPar = target.parent();
      target.remove();
      secret = $("<img id='" + toturn + "' class='mem_txt' data-stat='secret' src='memory/pics/secret.jpg' >");
      tdPar.append(secret);
      console.log(secret);
      return secret.on("click", (function(_this) {
        return function(e) {
          return _this._makeSvg(e);
        };
      })(this));
    };

    return TableView;

  })();
  return $.getJSON("memory/pics_map.json", function(data) {
    var table;
    return table = new TableView(data);
  });
});
